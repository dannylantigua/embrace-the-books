<?xml version="1.0" encoding="UTF-8"?>
<formatWrapper>
	<formatBuilderData>
		<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns1="http://pilotfish.sqlxml" xmlns:pf="http://com.pilotfish/eip/gui/mapper/formats/FormatToXsdWriter" elementFormDefault="qualified" targetNamespace="http://pilotfish.sqlxml">
			<xsd:element name="Assign">
				<xsd:annotation>
					<xsd:appinfo>
						<pf:property name="annotation">The Assign element creates a SQLXML variable with the provided name and expression.</pf:property>
					</xsd:appinfo>
				</xsd:annotation>
				<xsd:annotation>
					<xsd:appInfo />
					<xsd:documentation>The Assign element creates a SQLXML variable with the provided name and expression.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:attribute name="exp" type="xsd:string" use="required">
						<xsd:annotation>
							<xsd:appinfo>
								<pf:property name="annotation">Specifies the OGNL expression to evaluate as the variable value.</pf:property>
							</xsd:appinfo>
						</xsd:annotation>
						<xsd:annotation>
							<xsd:appInfo />
							<xsd:documentation>Specifies the OGNL expression to evaluate as the variable value.</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="name" type="xsd:string" use="required">
						<xsd:annotation>
							<xsd:appinfo>
								<pf:property name="annotation">Specifies the name of the variable to define.</pf:property>
							</xsd:appinfo>
						</xsd:annotation>
						<xsd:annotation>
							<xsd:appInfo />
							<xsd:documentation>Specifies the name of the variable to define.</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="SQL">
				<xsd:annotation>
					<xsd:appinfo>
						<pf:property name="annotation">The SQL element allows the user to provide a text value for SQL to be executed "as-is".</pf:property>
					</xsd:appinfo>
				</xsd:annotation>
				<xsd:annotation>
					<xsd:appInfo />
					<xsd:documentation>The SQL element allows the user to provide a text value for SQL to be executed "as-is".</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType />
			</xsd:element>
			<xsd:element name="Param">
				<xsd:annotation>
					<xsd:appinfo>
						<pf:property name="annotation">The Param element defines a parameter for a stored procedure in terms of mode, type, and name.</pf:property>
					</xsd:appinfo>
				</xsd:annotation>
				<xsd:annotation>
					<xsd:appInfo />
					<xsd:documentation>The Param element defines a parameter for a stored procedure in terms of mode, type, and name.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:attribute name="mode" type="xsd:string" use="required">
						<xsd:annotation>
							<xsd:appinfo>
								<pf:property name="annotation">Specifies the OGNL expression to evaluate as the variable value.</pf:property>
							</xsd:appinfo>
						</xsd:annotation>
						<xsd:annotation>
							<xsd:appInfo />
							<xsd:documentation>Specifies the OGNL expression to evaluate as the variable value.</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="name" type="xsd:string" use="required">
						<xsd:annotation>
							<xsd:appinfo>
								<pf:property name="annotation">Specifies the name of the variable to define.</pf:property>
							</xsd:appinfo>
						</xsd:annotation>
						<xsd:annotation>
							<xsd:appInfo />
							<xsd:documentation>Specifies the name of the variable to define.</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="type" type="xsd:string" use="required">
						<xsd:annotation>
							<xsd:appinfo>
								<pf:property name="annotation">Specifies the numeric SQL type for the parameter (dictated by JDBC driver).</pf:property>
							</xsd:appinfo>
						</xsd:annotation>
						<xsd:annotation>
							<xsd:appInfo />
							<xsd:documentation>Specifies the numeric SQL type for the parameter (dictated by JDBC driver).</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="CallProc">
				<xsd:annotation>
					<xsd:appinfo>
						<pf:property name="annotation">The CallProc element declared a Stored Procedure call with execution syntax (SQL) and parameters (Params).</pf:property>
					</xsd:appinfo>
				</xsd:annotation>
				<xsd:annotation>
					<xsd:appInfo />
					<xsd:documentation>The CallProc element declared a Stored Procedure call with execution syntax (SQL) and parameters (Params).</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:SQL" />
						<xsd:element maxOccurs="unbounded" minOccurs="0" ref="ns1:Param" />
					</xsd:sequence>
					<xsd:attribute name="into" type="xsd:string" use="required">
						<xsd:annotation>
							<xsd:appinfo>
								<pf:property name="annotation">Specifies the name of the variable to store results into.</pf:property>
							</xsd:appinfo>
						</xsd:annotation>
						<xsd:annotation>
							<xsd:appInfo />
							<xsd:documentation>Specifies the name of the variable to store results into.</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="hasResultSet" type="xsd:string">
						<xsd:annotation>
							<xsd:appinfo>
								<pf:property name="annotation">Specifies if the Stored Procedure returns a Result Set.</pf:property>
							</xsd:appinfo>
						</xsd:annotation>
						<xsd:annotation>
							<xsd:appInfo />
							<xsd:documentation>Specifies if the Stored Procedure returns a Result Set.</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="Delete">
				<xsd:annotation>
					<xsd:appinfo>
						<pf:property name="annotation">The Delete element is used to remove rows from a provided table given some set of columns using the "key" attribute.</pf:property>
					</xsd:appinfo>
				</xsd:annotation>
				<xsd:annotation>
					<xsd:appInfo />
					<xsd:documentation>The Delete element is used to remove rows from a provided table given some set of columns using the "key" attribute.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:choice>
						<xsd:element maxOccurs="1" minOccurs="1" ref="PEOPLE" />
					</xsd:choice>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="Exception">
				<xsd:annotation>
					<xsd:appinfo>
						<pf:property name="annotation">The Exception element throws an Exception with the message contents of the element's child text nodes (value).</pf:property>
					</xsd:appinfo>
				</xsd:annotation>
				<xsd:annotation>
					<xsd:appInfo />
					<xsd:documentation>The Exception element throws an Exception with the message contents of the element's child text nodes (value).</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType />
			</xsd:element>
			<xsd:element name="Params">
				<xsd:annotation>
					<xsd:appinfo>
						<pf:property name="annotation">The Params element defines a parameter for Execute statements, ordered according to their appearance in the SQL statement.</pf:property>
					</xsd:appinfo>
				</xsd:annotation>
				<xsd:annotation>
					<xsd:appInfo />
					<xsd:documentation>The Params element defines a parameter for Execute statements, ordered according to their appearance in the SQL statement.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType />
			</xsd:element>
			<xsd:element name="Execute">
				<xsd:annotation>
					<xsd:appinfo>
						<pf:property name="annotation">The Execute element executes a user-provided block of SQL against the database and optionally stores results into a variable (defined by "into" and "as" attributes).</pf:property>
					</xsd:appinfo>
				</xsd:annotation>
				<xsd:annotation>
					<xsd:appInfo />
					<xsd:documentation>The Execute element executes a user-provided block of SQL against the database and optionally stores results into a variable (defined by "into" and "as" attributes).</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:SQL" />
						<xsd:element maxOccurs="unbounded" minOccurs="0" ref="ns1:Params" />
					</xsd:sequence>
					<xsd:attribute name="into" type="xsd:string" use="required">
						<xsd:annotation>
							<xsd:appinfo>
								<pf:property name="annotation">Specifies the name of the variable to store results into ("records").</pf:property>
							</xsd:appinfo>
						</xsd:annotation>
						<xsd:annotation>
							<xsd:appInfo />
							<xsd:documentation>Specifies the name of the variable to store results into ("records").</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="as" type="xsd:string">
						<xsd:annotation>
							<xsd:appinfo>
								<pf:property name="annotation">Specifies the name of sub-variables to store results into ("record").</pf:property>
							</xsd:appinfo>
						</xsd:annotation>
						<xsd:annotation>
							<xsd:appInfo />
							<xsd:documentation>Specifies the name of sub-variables to store results into ("record").</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="Insert">
				<xsd:annotation>
					<xsd:appinfo>
						<pf:property name="annotation">The Insert element is used to insert rows into a provided table given a set of columns and their values.</pf:property>
					</xsd:appinfo>
				</xsd:annotation>
				<xsd:annotation>
					<xsd:appInfo />
					<xsd:documentation>The Insert element is used to insert rows into a provided table given a set of columns and their values.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:choice>
						<xsd:element maxOccurs="1" minOccurs="1" ref="PEOPLE" />
					</xsd:choice>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="InsertOrUpdate">
				<xsd:annotation>
					<xsd:appinfo>
						<pf:property name="annotation">The InsertOrUpdate element is used to insert or update (one is tried, and then the other) rows into a provided table given a set of columns and their values.</pf:property>
					</xsd:appinfo>
				</xsd:annotation>
				<xsd:annotation>
					<xsd:appInfo />
					<xsd:documentation>The InsertOrUpdate element is used to insert or update (one is tried, and then the other) rows into a provided table given a set of columns and their values.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:choice>
						<xsd:element maxOccurs="1" minOccurs="1" ref="PEOPLE" />
					</xsd:choice>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="RefreshMetaData">
				<xsd:annotation>
					<xsd:appinfo>
						<pf:property name="annotation">The RefreshMetaData element reloads database metadata (table, column names / types, etc).</pf:property>
					</xsd:appinfo>
				</xsd:annotation>
				<xsd:annotation>
					<xsd:appInfo />
					<xsd:documentation>The RefreshMetaData element reloads database metadata (table, column names / types, etc).</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType />
			</xsd:element>
			<xsd:element name="Select">
				<xsd:annotation>
					<xsd:appinfo>
						<pf:property name="annotation">The Select element is used to select rows from a provided table given a set of columns (which may have "key" values, indicating "WHERE" clauses) and their values.</pf:property>
					</xsd:appinfo>
				</xsd:annotation>
				<xsd:annotation>
					<xsd:appInfo />
					<xsd:documentation>The Select element is used to select rows from a provided table given a set of columns (which may have "key" values, indicating "WHERE" clauses) and their values.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:choice>
						<xsd:element maxOccurs="1" minOccurs="1" ref="PEOPLE" />
					</xsd:choice>
					<xsd:attribute name="into" type="xsd:string" use="required">
						<xsd:annotation>
							<xsd:appinfo>
								<pf:property name="annotation">Specifies the variable name to store results into ("records").</pf:property>
							</xsd:appinfo>
						</xsd:annotation>
						<xsd:annotation>
							<xsd:appInfo />
							<xsd:documentation>Specifies the variable name to store results into ("records").</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="Update">
				<xsd:annotation>
					<xsd:appinfo>
						<pf:property name="annotation">The Update element is used to update rows into a provided table given a set of columns (which may have "key" attributes representing "WHERE" clauses) and their values.</pf:property>
					</xsd:appinfo>
				</xsd:annotation>
				<xsd:annotation>
					<xsd:appInfo />
					<xsd:documentation>The Update element is used to update rows into a provided table given a set of columns (which may have "key" attributes representing "WHERE" clauses) and their values.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:choice>
						<xsd:element maxOccurs="1" minOccurs="1" ref="PEOPLE" />
					</xsd:choice>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="XMLOut">
				<xsd:annotation>
					<xsd:appinfo>
						<pf:property name="annotation">The XMLOut element is used to serialize variable or expression contents to XML as output.</pf:property>
					</xsd:appinfo>
				</xsd:annotation>
				<xsd:annotation>
					<xsd:appInfo />
					<xsd:documentation>The XMLOut element is used to serialize variable or expression contents to XML as output.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:attribute name="output" type="xsd:string">
						<xsd:annotation>
							<xsd:appinfo>
								<pf:property name="annotation">Specifies the format to output to. Defaults to "xml," but "TEXT" is also supported.</pf:property>
							</xsd:appinfo>
						</xsd:annotation>
						<xsd:annotation>
							<xsd:appInfo />
							<xsd:documentation>Specifies the format to output to. Defaults to "xml," but "TEXT" is also supported.</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="output-tags" type="xsd:string">
						<xsd:annotation>
							<xsd:appinfo>
								<pf:property name="annotation">Specifies a comma-separated list of output tag names for the TEXT "output" option.</pf:property>
							</xsd:appinfo>
						</xsd:annotation>
						<xsd:annotation>
							<xsd:appInfo />
							<xsd:documentation>Specifies a comma-separated list of output tag names for the TEXT "output" option.</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="attribute-tags" type="xsd:string">
						<xsd:annotation>
							<xsd:appinfo>
								<pf:property name="annotation">Specifies a comma-separated list of attribute tag names.</pf:property>
							</xsd:appinfo>
						</xsd:annotation>
						<xsd:annotation>
							<xsd:appInfo />
							<xsd:documentation>Specifies a comma-separated list of attribute tag names.</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="contextNode" type="xsd:string">
						<xsd:annotation>
							<xsd:appinfo>
								<pf:property name="annotation">Specifies an alternate parent element name for output.</pf:property>
							</xsd:appinfo>
						</xsd:annotation>
						<xsd:annotation>
							<xsd:appInfo />
							<xsd:documentation>Specifies an alternate parent element name for output.</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="trimValues" type="xsd:string">
						<xsd:annotation>
							<xsd:appinfo>
								<pf:property name="annotation">Specifies if output values in tags are whitespace-trimmed. Defaults to "true".</pf:property>
							</xsd:appinfo>
						</xsd:annotation>
						<xsd:annotation>
							<xsd:appInfo />
							<xsd:documentation>Specifies if output values in tags are whitespace-trimmed. Defaults to "true".</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="appendTo" type="xsd:string">
						<xsd:annotation>
							<xsd:appinfo>
								<pf:property name="annotation">Specifies an additional variable (in addition to "var") to output in addition to "var".</pf:property>
							</xsd:appinfo>
						</xsd:annotation>
						<xsd:annotation>
							<xsd:appInfo />
							<xsd:documentation>Specifies an additional variable (in addition to "var") to output in addition to "var".</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="var" type="xsd:string" use="required">
						<xsd:annotation>
							<xsd:appinfo>
								<pf:property name="annotation">Specifies the name of the variable to output.</pf:property>
							</xsd:appinfo>
						</xsd:annotation>
						<xsd:annotation>
							<xsd:appInfo />
							<xsd:documentation>Specifies the name of the variable to output.</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="While">
				<xsd:annotation>
					<xsd:appinfo>
						<pf:property name="annotation">The While element is used to iterate over a set of expressions.</pf:property>
					</xsd:appinfo>
				</xsd:annotation>
				<xsd:annotation>
					<xsd:appInfo />
					<xsd:documentation>The While element is used to iterate over a set of expressions.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:all>
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:Assign" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:CallProc" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:Delete" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:Exception" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:Execute" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:If" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:Insert" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:InsertOrUpdate" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:Iterate" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:RefreshMetaData" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:Select" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:TryCatch" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:Update" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:While" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:XMLOut" />
					</xsd:all>
					<xsd:attribute name="init" type="xsd:string">
						<xsd:annotation>
							<xsd:appinfo>
								<pf:property name="annotation">Specifies an initial OGNL expression that is evaluated when the While element is first executed.</pf:property>
							</xsd:appinfo>
						</xsd:annotation>
						<xsd:annotation>
							<xsd:appInfo />
							<xsd:documentation>Specifies an initial OGNL expression that is evaluated when the While element is first executed.</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="increment" type="xsd:string">
						<xsd:annotation>
							<xsd:appinfo>
								<pf:property name="annotation">Specifies an OGNL expression that is evaluated once per iteration.</pf:property>
							</xsd:appinfo>
						</xsd:annotation>
						<xsd:annotation>
							<xsd:appInfo />
							<xsd:documentation>Specifies an OGNL expression that is evaluated once per iteration.</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="test" type="xsd:string" use="required">
						<xsd:annotation>
							<xsd:appinfo>
								<pf:property name="annotation">Specifies an OGNL expression that is evaluated to test if another iteration will execute.</pf:property>
							</xsd:appinfo>
						</xsd:annotation>
						<xsd:annotation>
							<xsd:appInfo />
							<xsd:documentation>Specifies an OGNL expression that is evaluated to test if another iteration will execute.</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="Try">
				<xsd:annotation>
					<xsd:appinfo>
						<pf:property name="annotation">The Try element is part of the Try/Catch/Finally set and is used to wrap executed elements. Failures are handled by the Catch clause.</pf:property>
					</xsd:appinfo>
				</xsd:annotation>
				<xsd:annotation>
					<xsd:appInfo />
					<xsd:documentation>The Try element is part of the Try/Catch/Finally set and is used to wrap executed elements. Failures are handled by the Catch clause.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:all>
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:Assign" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:CallProc" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:Delete" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:Exception" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:Execute" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:If" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:Insert" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:InsertOrUpdate" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:Iterate" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:RefreshMetaData" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:Select" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:TryCatch" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:Update" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:While" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:XMLOut" />
					</xsd:all>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="Catch">
				<xsd:annotation>
					<xsd:appinfo>
						<pf:property name="annotation">The Catch element is part of the Try/Catch/Finally set and is used to execute elements. It has a context variable called "EXCEPTION" available to it.</pf:property>
					</xsd:appinfo>
				</xsd:annotation>
				<xsd:annotation>
					<xsd:appInfo />
					<xsd:documentation>The Catch element is part of the Try/Catch/Finally set and is used to execute elements. It has a context variable called "EXCEPTION" available to it.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:all>
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:Assign" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:CallProc" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:Delete" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:Exception" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:Execute" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:If" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:Insert" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:InsertOrUpdate" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:Iterate" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:RefreshMetaData" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:Select" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:TryCatch" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:Update" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:While" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:XMLOut" />
					</xsd:all>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="Finally">
				<xsd:annotation>
					<xsd:appinfo>
						<pf:property name="annotation">The Finally element is part of the Try/Catch/Finally set and is used to execute elements at the end of the set.</pf:property>
					</xsd:appinfo>
				</xsd:annotation>
				<xsd:annotation>
					<xsd:appInfo />
					<xsd:documentation>The Finally element is part of the Try/Catch/Finally set and is used to execute elements at the end of the set.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:all>
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:Assign" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:CallProc" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:Delete" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:Exception" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:Execute" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:If" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:Insert" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:InsertOrUpdate" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:Iterate" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:RefreshMetaData" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:Select" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:TryCatch" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:Update" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:While" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:XMLOut" />
					</xsd:all>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="TryCatch">
				<xsd:annotation>
					<xsd:appinfo>
						<pf:property name="annotation">The TryCatch element defines a Try/Catch/Finally set, which allows for safe handling of statements.</pf:property>
					</xsd:appinfo>
				</xsd:annotation>
				<xsd:annotation>
					<xsd:appInfo />
					<xsd:documentation>The TryCatch element defines a Try/Catch/Finally set, which allows for safe handling of statements.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:Try" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:Catch" />
						<xsd:element maxOccurs="1" minOccurs="0" ref="ns1:Finally" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="Iterate">
				<xsd:annotation>
					<xsd:appinfo>
						<pf:property name="annotation">The Iterate element iterates over a provided variable set ("over") using a sub-variable name for each entry ("as") and executes its child elements for each.</pf:property>
					</xsd:appinfo>
				</xsd:annotation>
				<xsd:annotation>
					<xsd:appInfo />
					<xsd:documentation>The Iterate element iterates over a provided variable set ("over") using a sub-variable name for each entry ("as") and executes its child elements for each.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:all>
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:Assign" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:CallProc" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:Delete" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:Exception" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:Execute" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:If" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:Insert" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:InsertOrUpdate" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:Iterate" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:RefreshMetaData" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:Select" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:TryCatch" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:Update" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:While" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:XMLOut" />
					</xsd:all>
					<xsd:attribute name="over" type="xsd:string" use="required">
						<xsd:annotation>
							<xsd:appinfo>
								<pf:property name="annotation">Specifies the variable to iterate over ("records").</pf:property>
							</xsd:appinfo>
						</xsd:annotation>
						<xsd:annotation>
							<xsd:appInfo />
							<xsd:documentation>Specifies the variable to iterate over ("records").</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="as" type="xsd:string" use="required">
						<xsd:annotation>
							<xsd:appinfo>
								<pf:property name="annotation">Specifies the variable name for each iteration ("record").</pf:property>
							</xsd:appinfo>
						</xsd:annotation>
						<xsd:annotation>
							<xsd:appInfo />
							<xsd:documentation>Specifies the variable name for each iteration ("record").</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="If">
				<xsd:annotation>
					<xsd:appinfo>
						<pf:property name="annotation">The If element tests a condition and, if it evalutes to true, executes its child elements.</pf:property>
					</xsd:appinfo>
				</xsd:annotation>
				<xsd:annotation>
					<xsd:appInfo />
					<xsd:documentation>The If element tests a condition and, if it evalutes to true, executes its child elements.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:all>
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:Assign" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:CallProc" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:Delete" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:Exception" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:Execute" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:If" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:Insert" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:InsertOrUpdate" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:Iterate" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:RefreshMetaData" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:Select" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:TryCatch" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:Update" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:While" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:XMLOut" />
					</xsd:all>
					<xsd:attribute name="test" type="xsd:string" use="required">
						<xsd:annotation>
							<xsd:appinfo>
								<pf:property name="annotation">Specifies the OGNL expression to evaluate as a test.</pf:property>
							</xsd:appinfo>
						</xsd:annotation>
						<xsd:annotation>
							<xsd:appInfo />
							<xsd:documentation>Specifies the OGNL expression to evaluate as a test.</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="SQLXML">
				<xsd:annotation>
					<xsd:appinfo>
						<pf:property name="annotation">The SQLXML element is the root-level element for SQLXML documents. It is required and used by the SQLXML sub-system to identify a SQLXML document.</pf:property>
					</xsd:appinfo>
				</xsd:annotation>
				<xsd:annotation>
					<xsd:appInfo />
					<xsd:documentation>The SQLXML element is the root-level element for SQLXML documents. It is required and used by the SQLXML sub-system to identify a SQLXML document.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:all>
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:Assign" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:CallProc" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:Delete" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:Exception" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:Execute" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:If" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:Insert" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:InsertOrUpdate" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:Iterate" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:RefreshMetaData" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:Select" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:TryCatch" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:Update" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:While" />
						<xsd:element maxOccurs="1" minOccurs="1" ref="ns1:XMLOut" />
					</xsd:all>
					<xsd:attribute name="identifierQuoteString" type="xsd:string">
						<xsd:annotation>
							<xsd:appinfo>
								<pf:property name="annotation">Provides a definition for a literal used to wrap field and table names. For example, if this is set to ", then a table named TABLE would be referenced as "TABLE". The default value is blank (no value).</pf:property>
							</xsd:appinfo>
						</xsd:annotation>
						<xsd:annotation>
							<xsd:appInfo />
							<xsd:documentation>Provides a definition for a literal used to wrap field and table names. For example, if this is set to ", then a table named TABLE would be referenced as "TABLE". The default value is blank (no value).</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="defaultNullString" type="xsd:string">
						<xsd:annotation>
							<xsd:appinfo>
								<pf:property name="annotation">Allows the user to provide a default value for null literal values. Defaults to null.</pf:property>
							</xsd:appinfo>
						</xsd:annotation>
						<xsd:annotation>
							<xsd:appInfo />
							<xsd:documentation>Allows the user to provide a default value for null literal values. Defaults to null.</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="defaultNullNumber" type="xsd:string">
						<xsd:annotation>
							<xsd:appinfo>
								<pf:property name="annotation">Allows the user to provide a default value for null numeric values. Defaults to null.</pf:property>
							</xsd:appinfo>
						</xsd:annotation>
						<xsd:annotation>
							<xsd:appInfo />
							<xsd:documentation>Allows the user to provide a default value for null numeric values. Defaults to null.</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="defaultNullDate" type="xsd:string">
						<xsd:annotation>
							<xsd:appinfo>
								<pf:property name="annotation">Allows the user to provide a default value for null date values. Defaults to null.</pf:property>
							</xsd:appinfo>
						</xsd:annotation>
						<xsd:annotation>
							<xsd:appInfo />
							<xsd:documentation>Allows the user to provide a default value for null date values. Defaults to null.</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="tagNameChars" type="xsd:string">
						<xsd:annotation>
							<xsd:appinfo>
								<pf:property name="annotation">A literal used as a list of characters allowed (in addition to alphanumerics) in result tag names. Setting this to "_" will allow resulting tags to have underscores. Defaults to blank.</pf:property>
							</xsd:appinfo>
						</xsd:annotation>
						<xsd:annotation>
							<xsd:appInfo />
							<xsd:documentation>A literal used as a list of characters allowed (in addition to alphanumerics) in result tag names. Setting this to "_" will allow resulting tags to have underscores. Defaults to blank.</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="XMLExceptionOutput" type="xsd:string">
						<xsd:annotation>
							<xsd:appinfo>
								<pf:property name="annotation">Specifies if SQLXML exceptions should be handled as XML output (if true) or fail at the stage (if blank). Defaults to blank.</pf:property>
							</xsd:appinfo>
						</xsd:annotation>
						<xsd:annotation>
							<xsd:appInfo />
							<xsd:documentation>Specifies if SQLXML exceptions should be handled as XML output (if true) or fail at the stage (if blank). Defaults to blank.</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
				</xsd:complexType>
			</xsd:element>
		</xsd:schema>
		<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pf="http://com.pilotfish/eip/gui/mapper/formats/FormatToXsdWriter">
			<xsd:element name="PEOPLE">
				<xsd:complexType>
					<xsd:choice>
						<xsd:element maxOccurs="1" minOccurs="1" name="PERSON_ID" type="PERSON_ID_element_type" />
						<xsd:element maxOccurs="1" minOccurs="1" name="FIRST_NAME" type="FIRST_NAME_element_type" />
						<xsd:element maxOccurs="1" minOccurs="1" name="MIDDLE_NAME" type="MIDDLE_NAME_element_type" />
						<xsd:element maxOccurs="1" minOccurs="1" name="LAST_NAME" type="LAST_NAME_element_type" />
						<xsd:element maxOccurs="1" minOccurs="1" name="GENDER" type="GENDER_element_type" />
						<xsd:element maxOccurs="1" minOccurs="1" name="SSN" type="SSN_element_type" />
						<xsd:element maxOccurs="1" minOccurs="1" name="BIRTHDATE" type="BIRTHDATE_element_type" />
						<xsd:element maxOccurs="1" minOccurs="1" name="OCCUPATION" type="OCCUPATION_element_type" />
						<xsd:element maxOccurs="1" minOccurs="1" name="VEHICLE_MAKE" type="VEHICLE_MAKE_element_type" />
						<xsd:element maxOccurs="1" minOccurs="1" name="VEHICLE_MODEL" type="VEHICLE_MODEL_element_type" />
						<xsd:element maxOccurs="1" minOccurs="1" name="ADDRESS_LINE_1" type="ADDRESS_LINE_1_element_type" />
						<xsd:element maxOccurs="1" minOccurs="1" name="ADDRESS_LINE_2" type="ADDRESS_LINE_2_element_type" />
						<xsd:element maxOccurs="1" minOccurs="1" name="CITY" type="CITY_element_type" />
						<xsd:element maxOccurs="1" minOccurs="1" name="STATE" type="STATE_element_type" />
						<xsd:element maxOccurs="1" minOccurs="1" name="ZIP" type="ZIP_element_type" />
					</xsd:choice>
				</xsd:complexType>
			</xsd:element>
			<xsd:simpleType name="STATE_element_type">
				<xsd:restriction base="xsd:anyType" />
			</xsd:simpleType>
			<xsd:simpleType name="VEHICLE_MAKE_element_type">
				<xsd:restriction base="xsd:anyType" />
			</xsd:simpleType>
			<xsd:simpleType name="CITY_element_type">
				<xsd:restriction base="xsd:anyType" />
			</xsd:simpleType>
			<xsd:simpleType name="ADDRESS_LINE_2_element_type">
				<xsd:restriction base="xsd:anyType" />
			</xsd:simpleType>
			<xsd:simpleType name="VEHICLE_MODEL_element_type">
				<xsd:restriction base="xsd:anyType" />
			</xsd:simpleType>
			<xsd:simpleType name="PERSON_ID_element_type">
				<xsd:restriction base="xsd:anyType" />
			</xsd:simpleType>
			<xsd:simpleType name="MIDDLE_NAME_element_type">
				<xsd:restriction base="xsd:anyType" />
			</xsd:simpleType>
			<xsd:simpleType name="SSN_element_type">
				<xsd:restriction base="xsd:anyType" />
			</xsd:simpleType>
			<xsd:simpleType name="LAST_NAME_element_type">
				<xsd:restriction base="xsd:anyType" />
			</xsd:simpleType>
			<xsd:simpleType name="FIRST_NAME_element_type">
				<xsd:restriction base="xsd:anyType" />
			</xsd:simpleType>
			<xsd:simpleType name="GENDER_element_type">
				<xsd:restriction base="xsd:anyType" />
			</xsd:simpleType>
			<xsd:simpleType name="ZIP_element_type">
				<xsd:restriction base="xsd:anyType" />
			</xsd:simpleType>
			<xsd:simpleType name="ADDRESS_LINE_1_element_type">
				<xsd:restriction base="xsd:anyType" />
			</xsd:simpleType>
			<xsd:simpleType name="OCCUPATION_element_type">
				<xsd:restriction base="xsd:anyType" />
			</xsd:simpleType>
			<xsd:simpleType name="BIRTHDATE_element_type">
				<xsd:restriction base="xsd:anyType" />
			</xsd:simpleType>
		</xsd:schema>
		<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:pf="http://com.pilotfish/eip/gui/mapper/formats/FormatToXsdWriter" targetNamespace="http://www.w3.org/2001/XMLSchema" />
	</formatBuilderData>
</formatWrapper>

